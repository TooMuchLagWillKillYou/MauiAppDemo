// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPI.Data;

#nullable disable

namespace MinimalAPI.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20240714210855_RevertToDateTime")]
    partial class RevertToDateTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MinimalAPI.Data.ReservationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Hour")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("People")
                        .HasColumnType("int");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hour = new DateTime(2024, 7, 14, 23, 8, 55, 142, DateTimeKind.Local).AddTicks(2625),
                            Name = "Mario",
                            Notes = "",
                            People = 5,
                            Table = "F2"
                        },
                        new
                        {
                            Id = 2,
                            Hour = new DateTime(2024, 7, 14, 23, 8, 55, 142, DateTimeKind.Local).AddTicks(2675),
                            Name = "Rossi",
                            Notes = "possibimente sui divanetti",
                            People = 2,
                            Table = "7"
                        },
                        new
                        {
                            Id = 3,
                            Hour = new DateTime(2024, 7, 14, 23, 8, 55, 142, DateTimeKind.Local).AddTicks(2679),
                            Name = "Paolo",
                            Notes = "",
                            People = 10,
                            Table = "30"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
